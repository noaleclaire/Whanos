- name: Create Azure Service Principal and Setup Environment
  hosts: localhost
  connection: local
  tasks:
    - name: Load ansible variables
      include_vars:
        file: env.yaml
    - name: Log into Azure with tenant id
      shell: "az login --tenant {{ az_ad_tenant_id }}"
      when: az_ad_tenant_id is defined
    - name: Log into Azure without tenant id
      shell: "az login"
      when: az_ad_tenant_id is undefined
    - name: Create Resource Group
      shell: "az group create --name {{ az_resource_group }} --location francecentral"
    - name: Create service principal
      shell: "az ad sp create-for-rbac --name {{ az_service_principal }} --role owner --scopes /subscriptions/$(az account show --query id -o tsv)/resourceGroups/{{ az_resource_group }} > tmp.json"
    - name: Fill env.yaml for ansible-playbook
      shell: "sed -i \"1 i az_subscription_id: $(az account show --query id -o tsv)\\naz_app_id: $(grep -oP '(?<=\"appId\": \")[^\"]*' tmp.json)\\naz_password: $(grep -oP '(?<=\"password\": \")[^\"]*' tmp.json)\\naz_tenant_id: $(grep -oP '(?<=\"tenant\": \")[^\"]*' tmp.json)\" env.yaml"
    - name: Fill env_variables for jenkins
      shell: "sed -i \"1 i USER_ADMIN_PASSWORD=\"$(grep -oP '(?<=jenkins_user_admin_password: ).*' env.yaml)\"\\nAZ_APP_ID=$(grep -oP '(?<=\"appId\": \")[^\"]*' tmp.json)\\nAZ_PASSWORD=$(grep -oP '(?<=\"password\": \")[^\"]*' tmp.json)\\nAZ_TENANT_ID=$(grep -oP '(?<=\"tenant\": \")[^\"]*' tmp.json)\\nAZ_RESOURCE_GROUP={{ az_resource_group }}\\nAZ_REGISTRY_NAME={{ az_registry_name }}\\nAZ_CLUSTER_NAME={{ az_cluster_name }}\" jenkins/env_variables.txt && rm tmp.json"
    - name: Log out from Azure
      shell: "az logout"

- name: Create Azure Container Registry
  hosts: localhost
  connection: local
  tasks:
    - name: Load ansible variables
      include_vars:
        file: env.yaml
    - name: Log into Azure with service principal
      shell: "az login --service-principal -u {{ az_app_id }} -p {{ az_password }} --tenant {{ az_tenant_id }}"
    - name: Creation of Azure Container Registry
      shell: "az acr create --resource-group {{ az_resource_group }} --name {{ az_registry_name }} --sku standard --location francecentral --admin-enabled true"

- name: Create Azure Kubernetes Service
  hosts: localhost
  connection: local
  tasks:
    - name: Load ansible variables
      include_vars:
        file: env.yaml
    - name: Creation of Azure Kubernetes Service
      shell: "az aks create --resource-group {{ az_resource_group }} --name {{ az_cluster_name }} --location francecentral --node-count 2 --node-vm-size Standard_D2_v2 --dns-name-prefix whanos --service-principal {{ az_app_id }} --client-secret {{ az_password }} --attach-acr {{ az_registry_name }} --tags \"env=Prod\""

- name: Deploy Jenkins Instance
  hosts: localhost
  connection: local
  tasks:
    - name: Load ansible variables
      include_vars:
        file: env.yaml
    - name: Log into Azure Container Registry
      shell: "az acr login --name {{ az_registry_name }}"
    - name: Build jenkins image
      shell: "docker build -t {{ az_registry_name }}.azurecr.io/jenkins-whanos:latest -f jenkins/Dockerfile ."
    - name: Push into Azure Container Registry
      shell: "docker push {{ az_registry_name }}.azurecr.io/jenkins-whanos:latest"
    - name: Install kubectl interface
      shell: "az aks install-cli"
    - name: Get credentials WhanosK8S
      shell: "az aks get-credentials --resource-group {{ az_resource_group }} --name {{ az_cluster_name }}"
    - name: Generate jenkins secrets
      shell: "kubectl create secret generic jenkins-secrets --from-env-file=jenkins/env_variables.txt"
    - name: Deploy jenkins
      shell: "kubectl apply -f jenkins/jenkins_deployment.yaml"
    # - name: Print Jenkins's dns name
    #   shell: ""
